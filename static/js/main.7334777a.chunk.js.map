{"version":3,"sources":["businessLogic.ts","persistentState.ts","serde.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["NoteEquivalenceRelation","NoteNameEquivalenceRelation","NoteDisplayStyle","Pitch","noteEqRelToNoteNameEqRel","er","ByNameModuloOctave","Reflexive","ByPitchModuloOctave","ByPitch","ByLetter","ByNameAndPitch","NoteName","ALL_PITCHES","E2","F2","FG2","G2","GA2","A2","AB2","B2","C3","CD3","D3","DE3","E3","F3","FG3","G3","GA3","A3","AB3","B3","C4","CD4","D4","DE4","E4","F4","FG4","G4","GA4","A4","AB4","B4","C5","CD5","D5","DE5","E5","F5","FG5","G5","GA5","A5","AB5","B5","C6","CD6","D6","DE6","E6","DEFAULT_SETTINGS","naturalsOnly","allowRepeats","equivalenceRelation","displayEquivalentNoteNames","sampleDisplayStyle","StaffAndLetters","minPitch","maxPitch","Natural","ALL_NOTES","f","xs","ys","out","Array","length","k","i","j","cartesianProduct","note","pitch","name","A","ASharp","BFlat","B","C","CSharp","DFlat","D","DSharp","EFlat","E","F","FSharp","GFlat","G","GSharp","AFlat","filter","sample","pitchToNoteNames","includes","Modification","LocalStorageKey","natural","modification","None","Sharp","Flat","alternativeName","nameStrings","displayEquivalentNotes","nameString","alt","nat","sharp","sharpOfNatural","flat","flatOfNatural","naturalToNote","isNotUndefined","sort","a","b","Infinity","scoreSuchThatNatLtSharpLtFlat","map","join","mod","modificationString","v","undefined","getRandomNote","prev","settings","arr","possibleNextNotes","getPossibleRandomNextNotes","Math","floor","random","possible","slice","isLowerThanOrEqualTo","possibleSample","some","prevSample","rel","areEqualAccordingTo","x","y","getNotationWithLetters","samples","n","src","push","insertXEveryN","noteNameAbcNotation","getOctave","pitchAbcNotation","deserializeSettings","s","parsed","JSON","parse","deserializeNoteHistory","isArray","every","isSample","isNote","isPitch","loadSettings","localStorage","getItem","Settings","possiblyUndefinedSettings","saveSettings","setItem","stringify","serializeSettings","loadNoteHistory","NoteHistory","possiblyUndefinedNoteHistory","saveNoteHistory","history","notes","App","props","state","isSettingsOpen","bindMethods","this","onCloseSettingsClick","bind","onNaturalsOnlyChange","onAllowRepeatsChange","onNoteDisplayStyleChange","onNoteEquivalenceRelationChange","onDisplayEquivalentNoteNamesChange","onMinPitchChange","onMaxPitchChange","onOpenSettingsClick","onClearHistoryClick","onNoteScreenClick","renderSettingsPage","renderNotePage","octaveSensitive","isOctaveSensitive","displaysPitch","style","Letters","Staff","doesDisplayPitch","className","onClick","type","checked","onChange","value","disabled","min","max","setState","event","updateSetting","target","parseInt","preventDefault","setting","prevState","newSettings","currentNote","notation","HTMLButtonElement","newHistory","concat","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"6IAgBYA,EAqCPC,EAuBOC,EA2BAC,E,sFA5CL,SAASC,EACdC,GAEA,OAAQA,GACN,KAAKL,EAAwBM,mBAC3B,OAAOL,EAA4BM,UACrC,KAAKP,EAAwBQ,oBAC3B,OAAOP,EAA4BQ,QACrC,KAAKT,EAAwBU,SAC3B,OAAOT,EAA4BS,SACrC,KAAKV,EAAwBS,QAC3B,OAAOR,EAA4BQ,QACrC,KAAKT,EAAwBW,eAC3B,OAAOV,EAA4BM,Y,SAxD7BP,O,2CAAAA,I,6CAAAA,I,uBAAAA,I,qBAAAA,I,oCAAAA,M,cAqCPC,O,yBAAAA,I,qBAAAA,I,wBAAAA,M,cAuBOC,O,qBAAAA,I,iBAAAA,I,sCAAAA,M,cA2BAC,O,WAAAA,I,WAAAA,I,aAAAA,I,WAAAA,I,aAAAA,I,WAAAA,I,aAAAA,I,WAAAA,I,WAAAA,I,aAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,YAAAA,I,cAAAA,I,YAAAA,I,cAAAA,I,aAAAA,M,KAoDZ,IAmEYS,EAnENC,EAAgC,CACpCV,EAAMW,GACNX,EAAMY,GACNZ,EAAMa,IACNb,EAAMc,GACNd,EAAMe,IACNf,EAAMgB,GACNhB,EAAMiB,IACNjB,EAAMkB,GACNlB,EAAMmB,GACNnB,EAAMoB,IACNpB,EAAMqB,GACNrB,EAAMsB,IACNtB,EAAMuB,GACNvB,EAAMwB,GACNxB,EAAMyB,IACNzB,EAAM0B,GACN1B,EAAM2B,IACN3B,EAAM4B,GACN5B,EAAM6B,IACN7B,EAAM8B,GACN9B,EAAM+B,GACN/B,EAAMgC,IACNhC,EAAMiC,GACNjC,EAAMkC,IACNlC,EAAMmC,GACNnC,EAAMoC,GACNpC,EAAMqC,IACNrC,EAAMsC,GACNtC,EAAMuC,IACNvC,EAAMwC,GACNxC,EAAMyC,IACNzC,EAAM0C,GACN1C,EAAM2C,GACN3C,EAAM4C,IACN5C,EAAM6C,GACN7C,EAAM8C,IACN9C,EAAM+C,GACN/C,EAAMgD,GACNhD,EAAMiD,IACNjD,EAAMkD,GACNlD,EAAMmD,IACNnD,EAAMoD,GACNpD,EAAMqD,IACNrD,EAAMsD,GACNtD,EAAMuD,GACNvD,EAAMwD,IACNxD,EAAMyD,GACNzD,EAAM0D,IACN1D,EAAM2D,IAGKC,EAA6B,CACxCC,cAAc,EACdC,cAAc,EACdC,oBAAqBlE,EAAwBM,mBAC7C6D,4BAA4B,EAC5BC,mBAAoBlE,EAAiBmE,gBACrCC,SAAUnE,EAAMW,GAChByD,SAAUpE,EAAM+C,K,SAQNtC,O,SAAAA,I,mBAAAA,I,iBAAAA,I,SAAAA,I,SAAAA,I,mBAAAA,I,iBAAAA,I,SAAAA,I,mBAAAA,I,iBAAAA,I,UAAAA,I,UAAAA,I,oBAAAA,I,kBAAAA,I,UAAAA,I,oBAAAA,I,mBAAAA,M,KAoBZ,IA2JY4D,EAvICC,EAUb,SACEC,EACAC,EACAC,GAKA,IAHA,IAAMC,EAAM,IAAIC,MAAMH,EAAGI,OAASH,EAAGG,QACjCC,EAAI,EAECC,EAAI,EAAGA,EAAIN,EAAGI,SAAUE,EAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAGG,SAAUG,EAC/BL,EAAIG,GAAKN,EAAEC,EAAGM,GAAIL,EAAGM,MACnBF,EAIN,OAAOH,EAzBiCM,EA4B1C,SAAqBC,EAAgBC,GACnC,MAAO,CAAEC,KAAMF,EAAMC,WAjDqB,CAC1CzE,EAAS2E,EACT3E,EAAS4E,OACT5E,EAAS6E,MACT7E,EAAS8E,EACT9E,EAAS+E,EACT/E,EAASgF,OACThF,EAASiF,MACTjF,EAASkF,EACTlF,EAASmF,OACTnF,EAASoF,MACTpF,EAASqF,EACTrF,EAASsF,EACTtF,EAASuF,OACTvF,EAASwF,MACTxF,EAASyF,EACTzF,EAAS0F,OACT1F,EAAS2F,OAMT1F,GAKC2F,QAAO,SAACC,GAAD,OAAYC,EAAiBD,EAAOpB,OAAOsB,SAASF,EAAOnB,SAwB9D,SAASoB,EAAiBrB,GAC/B,OAAQA,GACN,KAAKlF,EAAMW,GACT,MAAO,CAACF,EAASqF,GACnB,KAAK9F,EAAMY,GACT,MAAO,CAACH,EAASsF,GACnB,KAAK/F,EAAMa,IACT,MAAO,CAACJ,EAASuF,OAAQvF,EAASwF,OACpC,KAAKjG,EAAMc,GACT,MAAO,CAACL,EAASyF,GACnB,KAAKlG,EAAMe,IACT,MAAO,CAACN,EAAS0F,OAAQ1F,EAAS2F,OACpC,KAAKpG,EAAMgB,GACT,MAAO,CAACP,EAAS2E,GACnB,KAAKpF,EAAMiB,IACT,MAAO,CAACR,EAAS4E,OAAQ5E,EAAS6E,OACpC,KAAKtF,EAAMkB,GACT,MAAO,CAACT,EAAS8E,GACnB,KAAKvF,EAAMmB,GACT,MAAO,CAACV,EAAS+E,GACnB,KAAKxF,EAAMoB,IACT,MAAO,CAACX,EAASgF,OAAQhF,EAASiF,OACpC,KAAK1F,EAAMqB,GACT,MAAO,CAACZ,EAASkF,GACnB,KAAK3F,EAAMsB,IACT,MAAO,CAACb,EAASmF,OAAQnF,EAASoF,OACpC,KAAK7F,EAAMuB,GACT,MAAO,CAACd,EAASqF,GACnB,KAAK9F,EAAMwB,GACT,MAAO,CAACf,EAASsF,GACnB,KAAK/F,EAAMyB,IACT,MAAO,CAAChB,EAASuF,OAAQvF,EAASwF,OACpC,KAAKjG,EAAM0B,GACT,MAAO,CAACjB,EAASyF,GACnB,KAAKlG,EAAM2B,IACT,MAAO,CAAClB,EAAS0F,OAAQ1F,EAAS2F,OACpC,KAAKpG,EAAM4B,GACT,MAAO,CAACnB,EAAS2E,GACnB,KAAKpF,EAAM6B,IACT,MAAO,CAACpB,EAAS4E,OAAQ5E,EAAS6E,OACpC,KAAKtF,EAAM8B,GACT,MAAO,CAACrB,EAAS8E,GACnB,KAAKvF,EAAM+B,GACT,MAAO,CAACtB,EAAS+E,GACnB,KAAKxF,EAAMgC,IACT,MAAO,CAACvB,EAASgF,OAAQhF,EAASiF,OACpC,KAAK1F,EAAMiC,GACT,MAAO,CAACxB,EAASkF,GACnB,KAAK3F,EAAMkC,IACT,MAAO,CAACzB,EAASmF,OAAQnF,EAASoF,OACpC,KAAK7F,EAAMmC,GACT,MAAO,CAAC1B,EAASqF,GACnB,KAAK9F,EAAMoC,GACT,MAAO,CAAC3B,EAASsF,GACnB,KAAK/F,EAAMqC,IACT,MAAO,CAAC5B,EAASuF,OAAQvF,EAASwF,OACpC,KAAKjG,EAAMsC,GACT,MAAO,CAAC7B,EAASyF,GACnB,KAAKlG,EAAMuC,IACT,MAAO,CAAC9B,EAAS0F,OAAQ1F,EAAS2F,OACpC,KAAKpG,EAAMwC,GACT,MAAO,CAAC/B,EAAS2E,GACnB,KAAKpF,EAAMyC,IACT,MAAO,CAAChC,EAAS4E,OAAQ5E,EAAS6E,OACpC,KAAKtF,EAAM0C,GACT,MAAO,CAACjC,EAAS8E,GACnB,KAAKvF,EAAM2C,GACT,MAAO,CAAClC,EAAS+E,GACnB,KAAKxF,EAAM4C,IACT,MAAO,CAACnC,EAASgF,OAAQhF,EAASiF,OACpC,KAAK1F,EAAM6C,GACT,MAAO,CAACpC,EAASkF,GACnB,KAAK3F,EAAM8C,IACT,MAAO,CAACrC,EAASmF,OAAQnF,EAASoF,OACpC,KAAK7F,EAAM+C,GACT,MAAO,CAACtC,EAASqF,GACnB,KAAK9F,EAAMgD,GACT,MAAO,CAACvC,EAASsF,GACnB,KAAK/F,EAAMiD,IACT,MAAO,CAACxC,EAASuF,OAAQvF,EAASwF,OACpC,KAAKjG,EAAMkD,GACT,MAAO,CAACzC,EAASyF,GACnB,KAAKlG,EAAMmD,IACT,MAAO,CAAC1C,EAAS0F,OAAQ1F,EAAS2F,OACpC,KAAKpG,EAAMoD,GACT,MAAO,CAAC3C,EAAS2E,GACnB,KAAKpF,EAAMqD,IACT,MAAO,CAAC5C,EAAS4E,OAAQ5E,EAAS6E,OACpC,KAAKtF,EAAMsD,GACT,MAAO,CAAC7C,EAAS8E,GACnB,KAAKvF,EAAMuD,GACT,MAAO,CAAC9C,EAAS+E,GACnB,KAAKxF,EAAMwD,IACT,MAAO,CAAC/C,EAASgF,OAAQhF,EAASiF,OACpC,KAAK1F,EAAMyD,GACT,MAAO,CAAChD,EAASkF,GACnB,KAAK3F,EAAM0D,IACT,MAAO,CAACjD,EAASmF,OAAQnF,EAASoF,OACpC,KAAK7F,EAAM2D,GACT,MAAO,CAAClD,EAASqF,K,SAIXzB,O,SAAAA,I,SAAAA,I,SAAAA,I,SAAAA,I,SAAAA,I,SAAAA,I,UAAAA,M,KAUL,IAUKoC,ECzZPC,EDgZHrC,EAAQe,EACRf,EAAQkB,EACRlB,EAAQmB,EACRnB,EAAQsB,EACRtB,EAAQyB,EACRzB,EAAQ0B,EACR1B,EAAQ6B,EASH,SAASS,EAAQxB,GACtB,OAAQA,GACN,KAAK1E,EAAS2E,EAEd,KAAK3E,EAAS4E,OAEd,KAAK5E,EAAS2F,MACZ,OAAO/B,EAAQe,EAEjB,KAAK3E,EAAS8E,EAEd,KAAK9E,EAAS6E,MACZ,OAAOjB,EAAQkB,EAEjB,KAAK9E,EAAS+E,EAEd,KAAK/E,EAASgF,OACZ,OAAOpB,EAAQmB,EAEjB,KAAK/E,EAASiF,MAEd,KAAKjF,EAASkF,EAEd,KAAKlF,EAASmF,OACZ,OAAOvB,EAAQsB,EAEjB,KAAKlF,EAASoF,MAEd,KAAKpF,EAASqF,EACZ,OAAOzB,EAAQyB,EAEjB,KAAKrF,EAASsF,EAEd,KAAKtF,EAASuF,OACZ,OAAO3B,EAAQ0B,EAEjB,KAAKtF,EAASwF,MAEd,KAAKxF,EAASyF,EAEd,KAAKzF,EAAS0F,OACZ,OAAO9B,EAAQ6B,GAId,SAASU,EAAazB,GAC3B,OAAQA,GACN,KAAK1E,EAAS2E,EACd,KAAK3E,EAAS8E,EACd,KAAK9E,EAAS+E,EACd,KAAK/E,EAASkF,EACd,KAAKlF,EAASqF,EACd,KAAKrF,EAASsF,EACd,KAAKtF,EAASyF,EACZ,OAAOO,EAAaI,KAEtB,KAAKpG,EAAS4E,OACd,KAAK5E,EAASgF,OACd,KAAKhF,EAASmF,OACd,KAAKnF,EAASuF,OACd,KAAKvF,EAAS0F,OACZ,OAAOM,EAAaK,MAEtB,KAAKrG,EAAS2F,MACd,KAAK3F,EAAS6E,MACd,KAAK7E,EAASiF,MACd,KAAKjF,EAASoF,MACd,KAAKpF,EAASwF,MACZ,OAAOQ,EAAaM,MAenB,SAASC,EAAgB7B,GAC9B,OAAQA,GACN,KAAK1E,EAAS2F,MACZ,OAAO3F,EAAS0F,OAClB,KAAK1F,EAAS4E,OACZ,OAAO5E,EAAS6E,MAElB,KAAK7E,EAAS6E,MACZ,OAAO7E,EAAS4E,OAElB,KAAK5E,EAASgF,OACZ,OAAOhF,EAASiF,MAElB,KAAKjF,EAASiF,MACZ,OAAOjF,EAASgF,OAClB,KAAKhF,EAASmF,OACZ,OAAOnF,EAASoF,MAElB,KAAKpF,EAASoF,MACZ,OAAOpF,EAASmF,OAElB,KAAKnF,EAASuF,OACZ,OAAOvF,EAASwF,MAElB,KAAKxF,EAASwF,MACZ,OAAOxF,EAASuF,OAClB,KAAKvF,EAAS0F,OACZ,OAAO1F,EAAS2F,MAElB,KAAK3F,EAAS2E,EACd,KAAK3E,EAAS8E,EACd,KAAK9E,EAAS+E,EACd,KAAK/E,EAASkF,EACd,KAAKlF,EAASqF,EACd,KAAKrF,EAASsF,EACd,KAAKtF,EAASyF,EACZ,OAAOf,GAIN,SAAS8B,EACd9B,EACApB,EACAmD,GAEA,IAAKA,EACH,OAAOC,EAAWhC,GAuBpB,OAAQpB,GACN,KAAKjE,EAA4BM,UAC/B,OAAO+G,EAAWhC,GACpB,KAAKrF,EAA4BQ,QAC/B,IAAM8G,EAAMJ,EAAgB7B,GAC5B,OAAIiC,IAAQjC,EACHgC,EAAWhC,GAEXgC,EAAWhC,GAAQ,IAAMgC,EAAWC,GAG/C,KAAKtH,EAA4BS,SAC/B,IAAM8G,EAAMV,EAAQxB,GACdmC,EA8BL,SAAwBD,GAC7B,OAAQA,GACN,KAAKhD,EAAQe,EACX,OAAO3E,EAAS4E,OAClB,KAAKhB,EAAQkB,EACX,OACF,KAAKlB,EAAQmB,EACX,OAAO/E,EAASgF,OAClB,KAAKpB,EAAQsB,EACX,OAAOlF,EAASmF,OAClB,KAAKvB,EAAQyB,EACX,OACF,KAAKzB,EAAQ0B,EACX,OAAOtF,EAASuF,OAClB,KAAK3B,EAAQ6B,EACX,OAAOzF,EAAS0F,QA7CFoB,CAAeF,GACvBG,EAgDL,SAAuBH,GAC5B,OAAQA,GACN,KAAKhD,EAAQe,EACX,OAAO3E,EAAS2F,MAClB,KAAK/B,EAAQkB,EACX,OAAO9E,EAAS6E,MAClB,KAAKjB,EAAQmB,EACX,OACF,KAAKnB,EAAQsB,EACX,OAAOlF,EAASiF,MAClB,KAAKrB,EAAQyB,EACX,OAAOrF,EAASoF,MAClB,KAAKxB,EAAQ0B,EACX,OACF,KAAK1B,EAAQ6B,EACX,OAAOzF,EAASwF,OA/DHwB,CAAcJ,GAK3B,MAJc,CAACK,EAAcL,GAAMC,EAAOE,GACvCnB,OAAOsB,GACPC,MAhCP,SACEC,EACAC,GAEA,OAAID,IAAM1C,GACD,IACE2C,IAAM3C,EACR4C,IAEQC,EAA8BH,GAC9BG,EAA8BF,MAwBhCG,IAAId,GAAYe,KAAK,MAKjC,SAASf,EAAWlC,GACzB,OAG4BoC,EAHPV,EAAQ1B,GAItBZ,EAAQgD,GAGV,SAA4Bc,GACjC,OAAQA,GACN,KAAK1B,EAAaI,KAChB,MAAO,GACT,KAAKJ,EAAaK,MAChB,MAAO,SACT,KAAKL,EAAaM,KAChB,MAAO,UAd2BqB,CAAmBxB,EAAa3B,IAGjE,IAAuBoC,EAqDvB,SAASK,EAAcL,GAC5B,OAAQA,GACN,KAAKhD,EAAQe,EACX,OAAO3E,EAAS2E,EAClB,KAAKf,EAAQkB,EACX,OAAO9E,EAAS8E,EAClB,KAAKlB,EAAQmB,EACX,OAAO/E,EAAS+E,EAClB,KAAKnB,EAAQsB,EACX,OAAOlF,EAASkF,EAClB,KAAKtB,EAAQyB,EACX,OAAOrF,EAASqF,EAClB,KAAKzB,EAAQ0B,EACX,OAAOtF,EAASsF,EAClB,KAAK1B,EAAQ6B,EACX,OAAOzF,EAASyF,GAIf,SAAS8B,EAA8B/C,GAC5C,OAAQ2B,EAAa3B,IACnB,KAAKwB,EAAaI,KAChB,OAAO,EACT,KAAKJ,EAAaK,MAChB,OAAO,EACT,KAAKL,EAAaM,KAChB,OAAO,GAIN,SAASY,EAAkBU,GAChC,YAAUC,IAAND,EAOC,SAASE,EACdC,EACAC,GAEA,IAwC+BC,EAxCzBC,EAAoBC,EAA2BJ,EAAMC,GAC3D,OAwCmB,KADYC,EAvCVC,GAwCb/D,YACN,EAEO8D,EAAIG,KAAKC,MAAMD,KAAKE,SAAWL,EAAI9D,SAxCvC,SAASgE,EACdJ,EACAC,GAEA,IAAIO,EAAW1E,EAAU2E,QAAQ5C,QAC/B,SAACC,GAAD,OACE4C,EAAqBT,EAAStE,SAAUmC,EAAOpB,QAC/CgE,EAAqB5C,EAAOpB,MAAOuD,EAASrE,aAShD,OANIqE,EAAS5E,eACXmF,EAAWA,EAAS3C,QAClB,SAACC,GAAD,OAAYM,EAAaN,EAAOnB,QAAUsB,EAAaI,SAIvD4B,EAAS3E,aACJkF,EAGFA,EAAS3C,QACd,SAAC8C,GAAD,OACGX,EAAKY,MAAK,SAACC,GAAD,OAsBV,SACLC,EACAzB,EACAC,GAEA,OAAQwB,GACN,KAAKzJ,EAAwBM,mBAC3B,OAAO0H,EAAE1C,OAAS2C,EAAE3C,KACtB,KAAKtF,EAAwBQ,oBAC3B,OAAOwH,EAAE1C,OAAS2C,EAAE3C,MAAQ0C,EAAE1C,OAAS6B,EAAgBc,EAAE3C,MAC3D,KAAKtF,EAAwBU,SAC3B,OAAOoG,EAAQkB,EAAE1C,QAAUwB,EAAQmB,EAAE3C,MACvC,KAAKtF,EAAwBS,QAC3B,OAAOuH,EAAE3C,QAAU4C,EAAE5C,MACvB,KAAKrF,EAAwBW,eAC3B,OAAOqH,EAAE1C,OAAS2C,EAAE3C,MAAQ0C,EAAE3C,QAAU4C,EAAE5C,OApCxCqE,CACEd,EAAS1E,oBACToF,EACAE,SAMV,SAASH,EAAqBM,EAAUC,GACtC,OAAOD,GAAKC,EA8BP,SAASC,EAAuBC,GACrC,MAAM,qEAAN,OAeF,SAA0BpF,EAAYqF,EAAWC,GAE/C,IADA,IAAMnF,EAAM,GACHI,EAAI,EAAGA,EAAI+E,EAAIjF,SAAUE,EACtB,IAANA,GAAWA,EAAI8E,IAAM,GACvBlF,EAAIoF,KAAKvF,KAEXG,EAAIoF,KAAKD,EAAI/E,IAEf,OAAOJ,EAjBCqF,EACN,iBAAM,MACN,EACAJ,EAAQ1B,KAAI,SAAC3B,GAAD,OAqBhB,SAA6BnB,GAC3B,OAAQA,GACN,KAAK1E,EAAS2E,EACZ,MAAO,IACT,KAAK3E,EAAS4E,OACZ,MAAO,KACT,KAAK5E,EAAS6E,MACZ,MAAO,KACT,KAAK7E,EAAS8E,EACZ,MAAO,IACT,KAAK9E,EAAS+E,EACZ,MAAO,IACT,KAAK/E,EAASgF,OACZ,MAAO,KACT,KAAKhF,EAASiF,MACZ,MAAO,KACT,KAAKjF,EAASkF,EACZ,MAAO,IACT,KAAKlF,EAASmF,OACZ,MAAO,KACT,KAAKnF,EAASoF,MACZ,MAAO,KACT,KAAKpF,EAASqF,EACZ,MAAO,IACT,KAAKrF,EAASsF,EACZ,MAAO,IACT,KAAKtF,EAASuF,OACZ,MAAO,KACT,KAAKvF,EAASwF,MACZ,MAAO,KACT,KAAKxF,EAASyF,EACZ,MAAO,IACT,KAAKzF,EAAS0F,OACZ,MAAO,KACT,KAAK1F,EAAS2F,MACZ,MAAO,MAtCJ4D,EADgB/E,EAjBmBqB,GAkBVnB,MA0ClC,SAA0BD,GACxB,OAAQ+E,EAAU/E,IAChB,KAAK,EACH,MAAO,IACT,KAAK,EACH,MAAO,GACT,KAAK,EACH,MAAO,IACT,KAAK,EACH,MAAO,KACT,KAAK,EACH,MAAO,OArD6BgF,CAAiBjF,EAAKC,OADhE,IAAyBD,MAhBrBiD,KAAK,KAVP,qBAWKyB,EAAQ1B,KAAI,SAAC3B,GAAD,OAAYa,EAAWb,EAAOnB,SAAO+C,KAAK,KAX3D,MAoFK,SAAS+B,EAAU/E,GACxB,OAAQA,GACN,KAAKlF,EAAMW,GAEX,KAAKX,EAAMY,GAEX,KAAKZ,EAAMa,IAEX,KAAKb,EAAMc,GAEX,KAAKd,EAAMe,IAEX,KAAKf,EAAMgB,GAEX,KAAKhB,EAAMiB,IAEX,KAAKjB,EAAMkB,GACT,OAAO,EACT,KAAKlB,EAAMmB,GAEX,KAAKnB,EAAMoB,IAEX,KAAKpB,EAAMqB,GAEX,KAAKrB,EAAMsB,IAEX,KAAKtB,EAAMuB,GAEX,KAAKvB,EAAMwB,GAEX,KAAKxB,EAAMyB,IAEX,KAAKzB,EAAM0B,GAEX,KAAK1B,EAAM2B,IAEX,KAAK3B,EAAM4B,GAEX,KAAK5B,EAAM6B,IAEX,KAAK7B,EAAM8B,GACT,OAAO,EACT,KAAK9B,EAAM+B,GAEX,KAAK/B,EAAMgC,IAEX,KAAKhC,EAAMiC,GAEX,KAAKjC,EAAMkC,IAEX,KAAKlC,EAAMmC,GAEX,KAAKnC,EAAMoC,GAEX,KAAKpC,EAAMqC,IAEX,KAAKrC,EAAMsC,GAEX,KAAKtC,EAAMuC,IAEX,KAAKvC,EAAMwC,GAEX,KAAKxC,EAAMyC,IAEX,KAAKzC,EAAM0C,GACT,OAAO,EACT,KAAK1C,EAAM2C,GAEX,KAAK3C,EAAM4C,IAEX,KAAK5C,EAAM6C,GAEX,KAAK7C,EAAM8C,IAEX,KAAK9C,EAAM+C,GAEX,KAAK/C,EAAMgD,GAEX,KAAKhD,EAAMiD,IAEX,KAAKjD,EAAMkD,GAEX,KAAKlD,EAAMmD,IAEX,KAAKnD,EAAMoD,GAEX,KAAKpD,EAAMqD,IAEX,KAAKrD,EAAMsD,GACT,OAAO,EACT,KAAKtD,EAAMuD,GAEX,KAAKvD,EAAMwD,IAEX,KAAKxD,EAAMyD,GAEX,KAAKzD,EAAM0D,IAEX,KAAK1D,EAAM2D,GACT,OAAO,GE56BN,SAASwG,EAAoBC,GAClC,IACE,IAAMC,EAASC,KAAKC,MAAMH,GAC1B,GAUA,kBAFqBZ,EARDa,IAWd,OAANb,GACA,mBAAsBA,EAAe3F,cACrC,mBAAsB2F,EAAe1F,cACrC,kBAAqB0F,EAAezF,qBACnCyF,EAAezF,uBAAuBlE,GACvC,mBAAsB2J,EAAexF,4BACrC,kBAAqBwF,EAAevF,oBACnCuF,EAAevF,sBAAsBlE,GACtC,kBAAqByJ,EAAerF,UACnCqF,EAAerF,YAAYnE,GAC5B,kBAAqBwJ,EAAepF,UACnCoF,EAAepF,YAAYpE,EArB1B,OAAOqK,EAET,UAKJ,IAAyBb,EAsBlB,SAASgB,EAAuBJ,GACrC,IACE,IAAMC,EAASC,KAAKC,MAAMH,GAC1B,GAQuBZ,EARDa,EASjB1F,MAAM8F,QAAQjB,IAAMA,EAAEkB,MAAMC,GAR/B,OAAON,EAET,UAKJ,IAA2Bb,EAI3B,SAASmB,EAASnB,GAChB,MACE,kBAAoBA,GACd,OAANA,GAMJ,SAAgBA,GACd,MAAO,kBAAoB/I,EAAS+I,GANlCoB,CAAQpB,EAAWrE,OASvB,SAAiBqE,GACf,MAAO,kBAAoBxJ,EAAMwJ,GAT/BqB,CAASrB,EAAWtE,ODjDjB,SAAS4F,IACd,IAAMV,EAAIW,aAAaC,QAAQtE,EAAgBuE,UAC/C,GAAU,OAANb,EACF,OAAOxG,EAGT,IAAMsH,EAA4Bf,EAAoBC,GACtD,YAAkC9B,IAA9B4C,EACKA,EAEAtH,EAIJ,SAASuH,EAAa1C,GAC3BsC,aAAaK,QAAQ1E,EAAgBuE,SCUhC,SAA2BxC,GAChC,OAAO6B,KAAKe,UAAU5C,GDXyB6C,CAAkB7C,IAG5D,SAAS8C,IACd,IAAMnB,EAAIW,aAAaC,QAAQtE,EAAgB8E,aAC/C,GAAU,OAANpB,EACF,MAAO,GAGT,IAAMqB,EAA+BjB,EAAuBJ,GAC5D,YAAqC9B,IAAjCmD,EACKA,EAEA,GAIJ,SAASC,EAAgBC,GC6BzB,IAA8BC,ED5BnCb,aAAaK,QACX1E,EAAgB8E,aC2BiBI,ED1BZD,EC2BhBrB,KAAKe,UAAUO,M,SFsVZnF,O,eAAAA,I,iBAAAA,I,gBAAAA,M,cCzZPC,K,6BAAAA,E,oCAAAA,M,wBEqBgBmF,E,kDACnB,WAAYC,GAAY,IAAD,8BACrB,cAAMA,IAEDC,MAAQ,CACXC,gBAAgB,EAChBvD,SAAUqC,IACVa,QAASJ,KAGX,EAAKU,cATgB,E,+CAYvB,WACEC,KAAKC,qBAAuBD,KAAKC,qBAAqBC,KAAKF,MAC3DA,KAAKG,qBAAuBH,KAAKG,qBAAqBD,KAAKF,MAC3DA,KAAKI,qBAAuBJ,KAAKI,qBAAqBF,KAAKF,MAC3DA,KAAKK,yBAA2BL,KAAKK,yBAAyBH,KAAKF,MACnEA,KAAKM,gCACHN,KAAKM,gCAAgCJ,KAAKF,MAC5CA,KAAKO,mCACHP,KAAKO,mCAAmCL,KAAKF,MAC/CA,KAAKQ,iBAAmBR,KAAKQ,iBAAiBN,KAAKF,MACnDA,KAAKS,iBAAmBT,KAAKS,iBAAiBP,KAAKF,MAEnDA,KAAKU,oBAAsBV,KAAKU,oBAAoBR,KAAKF,MACzDA,KAAKW,oBAAsBX,KAAKW,oBAAoBT,KAAKF,MACzDA,KAAKY,kBAAoBZ,KAAKY,kBAAkBV,KAAKF,Q,oBAGvD,WACE,OAAIA,KAAKH,MAAMC,eACNE,KAAKa,qBAELb,KAAKc,mB,gCAIhB,WACE,IAAMC,EH9BH,SAA2B/M,GAChC,OAAQA,GACN,KAAKL,EAAwBM,mBAE7B,KAAKN,EAAwBQ,oBAE7B,KAAKR,EAAwBU,SAC3B,OAAO,EACT,KAAKV,EAAwBS,QAE7B,KAAKT,EAAwBW,eAC3B,OAAO,GGmBe0M,CACtBhB,KAAKH,MAAMtD,SAAS1E,qBAEhBoJ,EHWH,SAA0BC,GAC/B,OAAQA,GACN,KAAKrN,EAAiBsN,QACpB,OAAO,EACT,KAAKtN,EAAiBuN,MAEtB,KAAKvN,EAAiBmE,gBACpB,OAAO,GGlBaqJ,CACpBrB,KAAKH,MAAMtD,SAASxE,oBAEtB,OACE,sBAAKuJ,UAAU,MAAf,UACE,kCACE,wBAAQC,QAASvB,KAAKC,qBAAtB,qBAEF,0BAASqB,UAAU,WAAnB,UACE,wBAAOA,UAAU,4BAAjB,UACE,uBACEE,KAAK,WACLC,QAASzB,KAAKH,MAAMtD,SAAS5E,aAC7B+J,SAAU1B,KAAKG,uBAJnB,mBAQA,wBAAOmB,UAAU,4BAAjB,UACE,uBACEE,KAAK,WACLC,QAASzB,KAAKH,MAAMtD,SAAS3E,aAC7B8J,SAAU1B,KAAKI,uBAJnB,mBAQA,wBAAOkB,UAAU,4BAAjB,UACE,uBACEE,KAAK,WACLC,QAASzB,KAAKH,MAAMtD,SAASzE,2BAC7B4J,SAAU1B,KAAKO,qCAJnB,8BAQA,wBAAOe,UAAU,4BAAjB,0BAEE,yBACEK,MAAO3B,KAAKH,MAAMtD,SAASxE,mBAC3B2J,SAAU1B,KAAKK,yBAFjB,UAIE,wBACEsB,MAAO9N,EAAiBsN,QACxBS,SAAUb,EAFZ,qBAMA,wBAAQY,MAAO9N,EAAiBuN,MAAhC,mBACA,wBAAQO,MAAO9N,EAAiBmE,gBAAhC,kCAID+I,GACC,oIAMJ,wBAAOO,UAAU,4BAAjB,sCAEE,yBACEK,MAAO3B,KAAKH,MAAMtD,SAAS1E,oBAC3B6J,SAAU1B,KAAKM,gCAFjB,UAIE,wBAAQqB,MAAOhO,EAAwBM,mBAAvC,6CAGA,wBAAQ0N,MAAOhO,EAAwBQ,oBAAvC,oCAGA,wBAAQwN,MAAOhO,EAAwBU,SAAvC,uBAGA,wBACEsN,MAAOhO,EAAwBS,QAC/BwN,UAAWX,EAFb,yCAMA,wBACEU,MAAOhO,EAAwBW,eAC/BsN,UAAWX,EAFb,uEAOAA,GACA,8HAMJ,wBAAOK,UAAU,0BAAjB,UACE,sBAAMA,UAAU,iBAAhB,2BACA,uBACEE,KAAK,QACLK,IAAK/N,EAAMW,GACXqN,IAAKhO,EAAM2D,GACXkK,MAAO3B,KAAKH,MAAMtD,SAAStE,SAC3ByJ,SAAU1B,KAAKQ,mBAEjB,sBAAMc,UAAU,iBAAhB,SACGjH,EAAiB2F,KAAKH,MAAMtD,SAAStE,UACnC8D,IAAId,GACJe,KAAK,KAAO+B,EAAUiC,KAAKH,MAAMtD,SAAStE,eAGjD,wBAAOqJ,UAAU,0BAAjB,UACE,sBAAMA,UAAU,iBAAhB,6BACA,uBACEE,KAAK,QACLK,IAAK/N,EAAMW,GACXqN,IAAKhO,EAAM2D,GACXkK,MAAO3B,KAAKH,MAAMtD,SAASrE,SAC3BwJ,SAAU1B,KAAKS,mBAEjB,sBAAMa,UAAU,iBAAhB,SACGjH,EAAiB2F,KAAKH,MAAMtD,SAASrE,UACnC6D,IAAId,GACJe,KAAK,KAAO+B,EAAUiC,KAAKH,MAAMtD,SAASrE,uB,kCAQzD,WACE8H,KAAK+B,SAAS,CAAEjC,gBAAgB,M,kCAGlC,SAAqBkC,GACnBhC,KAAKiC,cAAc,eAAgBD,EAAME,OAAOT,W,kCAGlD,SAAqBO,GACnBhC,KAAKiC,cAAc,eAAgBD,EAAME,OAAOT,W,sCAGlD,SAAyBO,GACvB,IAAMtE,EAAIyE,SAASH,EAAME,OAAOP,MAAO,IACnCjE,KAAK7J,GACPmM,KAAKiC,cACH,qBACAvE,K,6CAKN,SACEsE,GAEA,IAAMtE,EAAIyE,SAASH,EAAME,OAAOP,MAAO,IACnCjE,KAAK/J,GACPqM,KAAKiC,cACH,sBACAvE,K,gDAKN,SACEsE,GAEAhC,KAAKiC,cAAc,6BAA8BD,EAAME,OAAOT,W,8BAGhE,SAAiBO,GACf,IAAMtE,EAAIyE,SAASH,EAAME,OAAOP,MAAO,IACnCjE,KAAK5J,GAAS4J,GAAKsC,KAAKH,MAAMtD,SAASrE,SACzC8H,KAAKiC,cAAc,WAAYvE,GAE/BsE,EAAMI,mB,8BAIV,SAAiBJ,GACf,IAAMtE,EAAIyE,SAASH,EAAME,OAAOP,MAAO,IACnCjE,KAAK5J,GAAS4J,GAAKsC,KAAKH,MAAMtD,SAAStE,SACzC+H,KAAKiC,cAAc,WAAYvE,GAE/BsE,EAAMI,mB,2BAIV,SAAwCC,EAAYV,GAClD3B,KAAK+B,UAAS,SAACO,GACb,IAAMC,EAAW,2BAAQD,EAAU/F,UAAlB,kBAA6B8F,EAAUV,IAExD,OADA1C,EAAasD,GACN,2BACFD,GADL,IAEE/F,SAAUgG,S,4BAKhB,WAAsC,IAAD,EAC7BC,EAAiC,UACrCxC,KAAKH,MAAMJ,QAAQO,KAAKH,MAAMJ,QAAQ/G,OAAS,UADV,aACrC,EAAmDO,KACrD,EAGI+G,KAAKH,MAAMtD,SAFb1E,EADF,EACEA,oBAC4BmD,EAF9B,EAEElD,2BAGF,OACE,sBACEwJ,UACE,OAEc,IADb5E,EAA2BsD,KAAKH,MAAMJ,QAASO,KAAKH,MAAMtD,UACxD7D,OACC,YACA,IAEN6I,QAASvB,KAAKY,kBARhB,UAUE,oCACE,wBAAQW,QAASvB,KAAKU,oBAAtB,sBACA,wBAAQa,QAASvB,KAAKW,oBAAtB,sBAEDX,KAAKH,MAAMtD,SAASxE,qBAAuBlE,EAAiBsN,QAC3D,qCACE,oCACE,mDACiB/E,IAAhBoG,EACC,qBAAKlB,UAAU,cAAf,SACGvG,EACCyH,EACAzO,EAAyB8D,GACzBmD,KAIJ,qDAGJ,kCACGgF,KAAKH,MAAMJ,QAAQ1D,KAAI,SAAC3B,EAAQxB,GAAT,OACtB,qBAAK0I,UAAU,cAAf,SACGvG,EACCX,EAAOnB,KACPlF,EAAyB8D,GACzBmD,IAJ8BpC,WAWxC,kCACE,cAAC,WAAD,CACE6J,SACEzC,KAAKH,MAAMtD,SAASxE,qBACpBlE,EAAiBmE,gBACbwF,EAAuBwC,KAAKH,MAAMJ,UACRO,KAAKH,MAAMJ,QHqnBjD,mI,iCG5mBN,WACEO,KAAK+B,SAAS,CAAEjC,gBAAgB,M,iCAGlC,WACEE,KAAK+B,SAAS,CAAEtC,QAAS,KACzBD,EAAgB,M,+BAGlB,SAAkBwC,GACZA,EAAME,kBAAkBQ,mBAI5B1C,KAAK+B,UAAS,SAACO,GACb,IAAMlI,EAASiC,EAAciG,EAAU7C,QAAS6C,EAAU/F,UACpDoG,OACOvG,IAAXhC,EACIkI,EAAU7C,QACV6C,EAAU7C,QAAQmD,OAAO,CAACxI,IAEhC,OADAoF,EAAgBmD,GACT,2BAAKL,GAAZ,IAAuB7C,QAASkD,W,GAtULE,IAAMC,WCjBjCC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DA0CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAACC,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBjE,QACf2D,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,+GAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAACC,GACNL,QAAQK,MAAM,4CAA6CA,MCjGjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SFenB,SAAkB7B,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI6B,IAAIC,IAAwBrC,OAAOC,SAASqC,MACpDC,SAAWvC,OAAOC,SAASsC,OAIvC,OAGFvC,OAAOwC,iBAAiB,QAAQ,WAC9B,IAAMnC,EAAK,UAAMgC,IAAN,sBAEPvC,IAgEV,SAAiCO,EAAeC,GAE9CmC,MAAMpC,EAAO,CACXqC,QAAS,CAAE,iBAAkB,YAE5BhC,MAAK,SAACiC,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CxC,UAAUC,cAAcwC,MAAMtC,MAAK,SAACC,GAClCA,EAAasC,aAAavC,MAAK,WAC7BV,OAAOC,SAASiD,eAKpB9C,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IAAI,oEAtFViC,CAAwB9C,EAAOC,GAI/BC,UAAUC,cAAcwC,MAAMtC,MAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,OErC/B8C,GAKA7B,M","file":"static/js/main.7334777a.chunk.js","sourcesContent":["export interface State {\n  isSettingsOpen: boolean;\n  settings: Settings;\n  history: Note[];\n}\n\nexport interface Settings {\n  naturalsOnly: boolean;\n  allowRepeats: boolean;\n  equivalenceRelation: NoteEquivalenceRelation;\n  displayEquivalentNoteNames: boolean;\n  sampleDisplayStyle: NoteDisplayStyle;\n  minPitch: Pitch;\n  maxPitch: Pitch;\n}\n\nexport enum NoteEquivalenceRelation {\n  /** \"modulo octave\" means the octaves won't affect equality (e.g., E2 = E4) */\n  ByNameModuloOctave = 0,\n  /** \"modulo octave\" means the octaves won't affect equality (e.g., E2 = E4) */\n  ByPitchModuloOctave = 1,\n\n  /**\n   * Definition: Two samples are equal iff they have the same letter.\n   *\n   * This means:\n   * - `ASharp`, `AFlat`, and `A` are all equal\n   * - Octave doesn't matter, since we only care about the letter\n   *\n   * This usually isn't very useful for playing actual music, but\n   * it can come in handy for certain drills (e.g., https://www.youtube.com/watch?v=PJddQ6Q0UDo&t=556s)\n   */\n  ByLetter = 2,\n\n  ByPitch = 3,\n  ByNameAndPitch = 4,\n}\n\nexport function isOctaveSensitive(er: NoteEquivalenceRelation): boolean {\n  switch (er) {\n    case NoteEquivalenceRelation.ByNameModuloOctave:\n      return false;\n    case NoteEquivalenceRelation.ByPitchModuloOctave:\n      return false;\n    case NoteEquivalenceRelation.ByLetter:\n      return false;\n    case NoteEquivalenceRelation.ByPitch:\n      return true;\n    case NoteEquivalenceRelation.ByNameAndPitch:\n      return true;\n  }\n}\n\nenum NoteNameEquivalenceRelation {\n  Reflexive,\n  ByPitch,\n  ByLetter,\n}\n\nexport function noteEqRelToNoteNameEqRel(\n  er: NoteEquivalenceRelation\n): NoteNameEquivalenceRelation {\n  switch (er) {\n    case NoteEquivalenceRelation.ByNameModuloOctave:\n      return NoteNameEquivalenceRelation.Reflexive;\n    case NoteEquivalenceRelation.ByPitchModuloOctave:\n      return NoteNameEquivalenceRelation.ByPitch;\n    case NoteEquivalenceRelation.ByLetter:\n      return NoteNameEquivalenceRelation.ByLetter;\n    case NoteEquivalenceRelation.ByPitch:\n      return NoteNameEquivalenceRelation.ByPitch;\n    case NoteEquivalenceRelation.ByNameAndPitch:\n      return NoteNameEquivalenceRelation.Reflexive;\n  }\n}\n\nexport enum NoteDisplayStyle {\n  Letters,\n  Staff,\n  StaffAndLetters,\n}\n\nexport function doesDisplayPitch(style: NoteDisplayStyle): boolean {\n  switch (style) {\n    case NoteDisplayStyle.Letters:\n      return false;\n    case NoteDisplayStyle.Staff:\n      return true;\n    case NoteDisplayStyle.StaffAndLetters:\n      return true;\n  }\n}\n\n/**\n * Flats and sharps are named based on the natural\n * notes that they're between.\n * For example, both A Sharp 2 and B Flat 2 are\n * represented by `AB2`.\n *\n * The numeric values assigned to this enum's variants\n * are guaranteed to be assigned such that lower pitches\n * have smaller numbers than higher pitches.\n */\nexport enum Pitch {\n  E2,\n  F2,\n  FG2,\n  G2,\n  GA2,\n  A2,\n  AB2,\n  B2,\n  C3,\n  CD3,\n  D3,\n  DE3,\n  E3,\n  F3,\n  FG3,\n  G3,\n  GA3,\n  A3,\n  AB3,\n  B3,\n  C4,\n  CD4,\n  D4,\n  DE4,\n  E4,\n  F4,\n  FG4,\n  G4,\n  GA4,\n  A4,\n  AB4,\n  B4,\n  C5,\n  CD5,\n  D5,\n  DE5,\n  E5,\n  F5,\n  FG5,\n  G5,\n  GA5,\n  A5,\n  AB5,\n  B5,\n  C6,\n  CD6,\n  D6,\n  DE6,\n  E6,\n}\n\nconst ALL_PITCHES: readonly Pitch[] = [\n  Pitch.E2,\n  Pitch.F2,\n  Pitch.FG2,\n  Pitch.G2,\n  Pitch.GA2,\n  Pitch.A2,\n  Pitch.AB2,\n  Pitch.B2,\n  Pitch.C3,\n  Pitch.CD3,\n  Pitch.D3,\n  Pitch.DE3,\n  Pitch.E3,\n  Pitch.F3,\n  Pitch.FG3,\n  Pitch.G3,\n  Pitch.GA3,\n  Pitch.A3,\n  Pitch.AB3,\n  Pitch.B3,\n  Pitch.C4,\n  Pitch.CD4,\n  Pitch.D4,\n  Pitch.DE4,\n  Pitch.E4,\n  Pitch.F4,\n  Pitch.FG4,\n  Pitch.G4,\n  Pitch.GA4,\n  Pitch.A4,\n  Pitch.AB4,\n  Pitch.B4,\n  Pitch.C5,\n  Pitch.CD5,\n  Pitch.D5,\n  Pitch.DE5,\n  Pitch.E5,\n  Pitch.F5,\n  Pitch.FG5,\n  Pitch.G5,\n  Pitch.GA5,\n  Pitch.A5,\n  Pitch.AB5,\n  Pitch.B5,\n  Pitch.C6,\n  Pitch.CD6,\n  Pitch.D6,\n  Pitch.DE6,\n  Pitch.E6,\n];\n\nexport const DEFAULT_SETTINGS: Settings = {\n  naturalsOnly: true,\n  allowRepeats: false,\n  equivalenceRelation: NoteEquivalenceRelation.ByNameModuloOctave,\n  displayEquivalentNoteNames: true,\n  sampleDisplayStyle: NoteDisplayStyle.StaffAndLetters,\n  minPitch: Pitch.E2,\n  maxPitch: Pitch.E5,\n};\n\nexport interface Note {\n  name: NoteName;\n  pitch: Pitch;\n}\n\nexport enum NoteName {\n  A,\n  ASharp,\n  BFlat,\n  B,\n  C,\n  CSharp,\n  DFlat,\n  D,\n  DSharp,\n  EFlat,\n  E,\n  F,\n  FSharp,\n  GFlat,\n  G,\n  GSharp,\n  AFlat,\n}\n\nconst ALL_NOTE_NAMES: readonly NoteName[] = [\n  NoteName.A,\n  NoteName.ASharp,\n  NoteName.BFlat,\n  NoteName.B,\n  NoteName.C,\n  NoteName.CSharp,\n  NoteName.DFlat,\n  NoteName.D,\n  NoteName.DSharp,\n  NoteName.EFlat,\n  NoteName.E,\n  NoteName.F,\n  NoteName.FSharp,\n  NoteName.GFlat,\n  NoteName.G,\n  NoteName.GSharp,\n  NoteName.AFlat,\n];\n\nexport const ALL_NOTES: readonly Note[] = cartesianProduct(\n  buildSample,\n  ALL_NOTE_NAMES,\n  ALL_PITCHES\n)\n  // We can't simply define the set of all notes as the Cartesian product,\n  // since that would include some nonsensical samples (e.g., `{ note: NoteName.A, pitch: Pitch.C2 }`).\n  // Instead, we only include samples that have names that agree with their pitch.\n  .filter((sample) => pitchToNoteNames(sample.pitch).includes(sample.name));\n\nfunction cartesianProduct<T, U, R>(\n  f: (x: T, y: U) => R,\n  xs: readonly T[],\n  ys: readonly U[]\n): R[] {\n  const out = new Array(xs.length * ys.length);\n  let k = 0;\n\n  for (let i = 0; i < xs.length; ++i) {\n    for (let j = 0; j < ys.length; ++j) {\n      out[k] = f(xs[i], ys[j]);\n      ++k;\n    }\n  }\n\n  return out;\n}\n\nfunction buildSample(note: NoteName, pitch: Pitch): Note {\n  return { name: note, pitch };\n}\n\nexport function pitchToNoteNames(pitch: Pitch): NoteName[] {\n  switch (pitch) {\n    case Pitch.E2:\n      return [NoteName.E];\n    case Pitch.F2:\n      return [NoteName.F];\n    case Pitch.FG2:\n      return [NoteName.FSharp, NoteName.GFlat];\n    case Pitch.G2:\n      return [NoteName.G];\n    case Pitch.GA2:\n      return [NoteName.GSharp, NoteName.AFlat];\n    case Pitch.A2:\n      return [NoteName.A];\n    case Pitch.AB2:\n      return [NoteName.ASharp, NoteName.BFlat];\n    case Pitch.B2:\n      return [NoteName.B];\n    case Pitch.C3:\n      return [NoteName.C];\n    case Pitch.CD3:\n      return [NoteName.CSharp, NoteName.DFlat];\n    case Pitch.D3:\n      return [NoteName.D];\n    case Pitch.DE3:\n      return [NoteName.DSharp, NoteName.EFlat];\n    case Pitch.E3:\n      return [NoteName.E];\n    case Pitch.F3:\n      return [NoteName.F];\n    case Pitch.FG3:\n      return [NoteName.FSharp, NoteName.GFlat];\n    case Pitch.G3:\n      return [NoteName.G];\n    case Pitch.GA3:\n      return [NoteName.GSharp, NoteName.AFlat];\n    case Pitch.A3:\n      return [NoteName.A];\n    case Pitch.AB3:\n      return [NoteName.ASharp, NoteName.BFlat];\n    case Pitch.B3:\n      return [NoteName.B];\n    case Pitch.C4:\n      return [NoteName.C];\n    case Pitch.CD4:\n      return [NoteName.CSharp, NoteName.DFlat];\n    case Pitch.D4:\n      return [NoteName.D];\n    case Pitch.DE4:\n      return [NoteName.DSharp, NoteName.EFlat];\n    case Pitch.E4:\n      return [NoteName.E];\n    case Pitch.F4:\n      return [NoteName.F];\n    case Pitch.FG4:\n      return [NoteName.FSharp, NoteName.GFlat];\n    case Pitch.G4:\n      return [NoteName.G];\n    case Pitch.GA4:\n      return [NoteName.GSharp, NoteName.AFlat];\n    case Pitch.A4:\n      return [NoteName.A];\n    case Pitch.AB4:\n      return [NoteName.ASharp, NoteName.BFlat];\n    case Pitch.B4:\n      return [NoteName.B];\n    case Pitch.C5:\n      return [NoteName.C];\n    case Pitch.CD5:\n      return [NoteName.CSharp, NoteName.DFlat];\n    case Pitch.D5:\n      return [NoteName.D];\n    case Pitch.DE5:\n      return [NoteName.DSharp, NoteName.EFlat];\n    case Pitch.E5:\n      return [NoteName.E];\n    case Pitch.F5:\n      return [NoteName.F];\n    case Pitch.FG5:\n      return [NoteName.FSharp, NoteName.GFlat];\n    case Pitch.G5:\n      return [NoteName.G];\n    case Pitch.GA5:\n      return [NoteName.GSharp, NoteName.AFlat];\n    case Pitch.A5:\n      return [NoteName.A];\n    case Pitch.AB5:\n      return [NoteName.ASharp, NoteName.BFlat];\n    case Pitch.B5:\n      return [NoteName.B];\n    case Pitch.C6:\n      return [NoteName.C];\n    case Pitch.CD6:\n      return [NoteName.CSharp, NoteName.DFlat];\n    case Pitch.D6:\n      return [NoteName.D];\n    case Pitch.DE6:\n      return [NoteName.DSharp, NoteName.EFlat];\n    case Pitch.E6:\n      return [NoteName.E];\n  }\n}\n\nexport enum Natural {\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  G,\n}\n\nexport const ALL_NATURALS: readonly Natural[] = [\n  Natural.A,\n  Natural.B,\n  Natural.C,\n  Natural.D,\n  Natural.E,\n  Natural.F,\n  Natural.G,\n];\n\nexport enum Modification {\n  None,\n  Sharp,\n  Flat,\n}\n\nexport function natural(name: NoteName): Natural {\n  switch (name) {\n    case NoteName.A:\n      return Natural.A;\n    case NoteName.ASharp:\n      return Natural.A;\n    case NoteName.AFlat:\n      return Natural.A;\n\n    case NoteName.B:\n      return Natural.B;\n    case NoteName.BFlat:\n      return Natural.B;\n\n    case NoteName.C:\n      return Natural.C;\n    case NoteName.CSharp:\n      return Natural.C;\n\n    case NoteName.DFlat:\n      return Natural.D;\n    case NoteName.D:\n      return Natural.D;\n    case NoteName.DSharp:\n      return Natural.D;\n\n    case NoteName.EFlat:\n      return Natural.E;\n    case NoteName.E:\n      return Natural.E;\n\n    case NoteName.F:\n      return Natural.F;\n    case NoteName.FSharp:\n      return Natural.F;\n\n    case NoteName.GFlat:\n      return Natural.G;\n    case NoteName.G:\n      return Natural.G;\n    case NoteName.GSharp:\n      return Natural.G;\n  }\n}\n\nexport function modification(name: NoteName): Modification {\n  switch (name) {\n    case NoteName.A:\n    case NoteName.B:\n    case NoteName.C:\n    case NoteName.D:\n    case NoteName.E:\n    case NoteName.F:\n    case NoteName.G:\n      return Modification.None;\n\n    case NoteName.ASharp:\n    case NoteName.CSharp:\n    case NoteName.DSharp:\n    case NoteName.FSharp:\n    case NoteName.GSharp:\n      return Modification.Sharp;\n\n    case NoteName.AFlat:\n    case NoteName.BFlat:\n    case NoteName.DFlat:\n    case NoteName.EFlat:\n    case NoteName.GFlat:\n      return Modification.Flat;\n  }\n}\n\n/**\n  * Non-natural notes have two names (e.g., C sharp and D flat).\n  * If the provided note is not natural, the other name will be returned.\n  * If it is natural, the original note will be returned.\n\n  * ## Example\n  * ```typescript\n  * assert(NoteName.DFlat === alternativeName(NoteName.CSharp));\n  * assert(NoteName.C === alternativeName(NoteName.C));\n  * ```\n  */\nexport function alternativeName(name: NoteName): NoteName {\n  switch (name) {\n    case NoteName.AFlat:\n      return NoteName.GSharp;\n    case NoteName.ASharp:\n      return NoteName.BFlat;\n\n    case NoteName.BFlat:\n      return NoteName.ASharp;\n\n    case NoteName.CSharp:\n      return NoteName.DFlat;\n\n    case NoteName.DFlat:\n      return NoteName.CSharp;\n    case NoteName.DSharp:\n      return NoteName.EFlat;\n\n    case NoteName.EFlat:\n      return NoteName.DSharp;\n\n    case NoteName.FSharp:\n      return NoteName.GFlat;\n\n    case NoteName.GFlat:\n      return NoteName.FSharp;\n    case NoteName.GSharp:\n      return NoteName.AFlat;\n\n    case NoteName.A:\n    case NoteName.B:\n    case NoteName.C:\n    case NoteName.D:\n    case NoteName.E:\n    case NoteName.F:\n    case NoteName.G:\n      return name;\n  }\n}\n\nexport function nameStrings(\n  name: NoteName,\n  equivalenceRelation: NoteNameEquivalenceRelation,\n  displayEquivalentNotes: boolean\n): string {\n  if (!displayEquivalentNotes) {\n    return nameString(name);\n  }\n\n  /**\n   * To clarify:\n   * The name is \"Compare such that [original, nat, sharp, flat]\n   * is ascending\".\n   */\n  function compareSuchThatOriginalNatSharpFlatIsAscending(\n    a: NoteName,\n    b: NoteName\n  ): number {\n    if (a === name) {\n      return -Infinity;\n    } else if (b === name) {\n      return Infinity;\n    } else {\n      const aScore = scoreSuchThatNatLtSharpLtFlat(a);\n      const bScore = scoreSuchThatNatLtSharpLtFlat(b);\n      return aScore - bScore;\n    }\n  }\n\n  switch (equivalenceRelation) {\n    case NoteNameEquivalenceRelation.Reflexive:\n      return nameString(name);\n    case NoteNameEquivalenceRelation.ByPitch: {\n      const alt = alternativeName(name);\n      if (alt === name) {\n        return nameString(name);\n      } else {\n        return nameString(name) + \"/\" + nameString(alt);\n      }\n    }\n    case NoteNameEquivalenceRelation.ByLetter: {\n      const nat = natural(name);\n      const sharp = sharpOfNatural(nat);\n      const flat = flatOfNatural(nat);\n      const notes = [naturalToNote(nat), sharp, flat]\n        .filter(isNotUndefined)\n        .sort(compareSuchThatOriginalNatSharpFlatIsAscending);\n\n      return notes.map(nameString).join(\"/\");\n    }\n  }\n}\n\nexport function nameString(note: NoteName): string {\n  return naturalString(natural(note)) + modificationString(modification(note));\n}\n\nexport function naturalString(nat: Natural): string {\n  return Natural[nat];\n}\n\nexport function modificationString(mod: Modification): string {\n  switch (mod) {\n    case Modification.None:\n      return \"\";\n    case Modification.Sharp:\n      return \"♯\";\n    case Modification.Flat:\n      return \"♭\";\n  }\n}\n\nexport function sharpOfNatural(nat: Natural): undefined | NoteName {\n  switch (nat) {\n    case Natural.A:\n      return NoteName.ASharp;\n    case Natural.B:\n      return undefined;\n    case Natural.C:\n      return NoteName.CSharp;\n    case Natural.D:\n      return NoteName.DSharp;\n    case Natural.E:\n      return undefined;\n    case Natural.F:\n      return NoteName.FSharp;\n    case Natural.G:\n      return NoteName.GSharp;\n  }\n}\n\nexport function flatOfNatural(nat: Natural): undefined | NoteName {\n  switch (nat) {\n    case Natural.A:\n      return NoteName.AFlat;\n    case Natural.B:\n      return NoteName.BFlat;\n    case Natural.C:\n      return undefined;\n    case Natural.D:\n      return NoteName.DFlat;\n    case Natural.E:\n      return NoteName.EFlat;\n    case Natural.F:\n      return undefined;\n    case Natural.G:\n      return NoteName.GFlat;\n  }\n}\n\nexport function naturalToNote(nat: Natural): NoteName {\n  switch (nat) {\n    case Natural.A:\n      return NoteName.A;\n    case Natural.B:\n      return NoteName.B;\n    case Natural.C:\n      return NoteName.C;\n    case Natural.D:\n      return NoteName.D;\n    case Natural.E:\n      return NoteName.E;\n    case Natural.F:\n      return NoteName.F;\n    case Natural.G:\n      return NoteName.G;\n  }\n}\n\nexport function scoreSuchThatNatLtSharpLtFlat(note: NoteName): number {\n  switch (modification(note)) {\n    case Modification.None:\n      return 0;\n    case Modification.Sharp:\n      return 1;\n    case Modification.Flat:\n      return 2;\n  }\n}\n\nexport function isNotUndefined<T>(v: T | undefined): v is T {\n  if (v === undefined) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport function getRandomNote(\n  prev: Note[],\n  settings: Settings\n): undefined | Note {\n  const possibleNextNotes = getPossibleRandomNextNotes(prev, settings);\n  return randomElement(possibleNextNotes);\n}\n\nexport function getPossibleRandomNextNotes(\n  prev: Note[],\n  settings: Settings\n): Note[] {\n  let possible = ALL_NOTES.slice().filter(\n    (sample) =>\n      isLowerThanOrEqualTo(settings.minPitch, sample.pitch) &&\n      isLowerThanOrEqualTo(sample.pitch, settings.maxPitch)\n  );\n\n  if (settings.naturalsOnly) {\n    possible = possible.filter(\n      (sample) => modification(sample.name) === Modification.None\n    );\n  }\n\n  if (settings.allowRepeats) {\n    return possible;\n  }\n\n  return possible.filter(\n    (possibleSample) =>\n      !prev.some((prevSample) =>\n        areEqualAccordingTo(\n          settings.equivalenceRelation,\n          possibleSample,\n          prevSample\n        )\n      )\n  );\n}\n\nfunction isLowerThanOrEqualTo(x: Pitch, y: Pitch): boolean {\n  return x <= y;\n}\n\nexport function randomElement<T>(arr: T[]): undefined | T {\n  if (arr.length === 0) {\n    return undefined;\n  } else {\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n}\n\nexport function areEqualAccordingTo(\n  rel: NoteEquivalenceRelation,\n  a: Note,\n  b: Note\n): boolean {\n  switch (rel) {\n    case NoteEquivalenceRelation.ByNameModuloOctave:\n      return a.name === b.name;\n    case NoteEquivalenceRelation.ByPitchModuloOctave:\n      return a.name === b.name || a.name === alternativeName(b.name);\n    case NoteEquivalenceRelation.ByLetter:\n      return natural(a.name) === natural(b.name);\n    case NoteEquivalenceRelation.ByPitch:\n      return a.pitch === b.pitch;\n    case NoteEquivalenceRelation.ByNameAndPitch:\n      return a.name === b.name && a.pitch === b.pitch;\n  }\n}\n\nexport function getNotationWithLetters(samples: Note[]): string {\n  return `\nX: 1\nM: 4/4\nL: 1/4\n%%staves {V1}\nV: V1 clef=treble\n[V: V1] ${insertXEveryN(\n    () => \"|\",\n    4,\n    samples.map((sample) => noteAbcNotation(sample))\n  ).join(\" \")} |]\nw:1.~${samples.map((sample) => nameString(sample.name)).join(\" \")}\n`;\n}\n\nfunction insertXEveryN<T>(f: () => T, n: number, src: readonly T[]): T[] {\n  const out = [];\n  for (let i = 0; i < src.length; ++i) {\n    if (i !== 0 && i % n === 0) {\n      out.push(f());\n    }\n    out.push(src[i]);\n  }\n  return out;\n}\n\nfunction noteAbcNotation(note: Note): string {\n  return noteNameAbcNotation(note.name) + pitchAbcNotation(note.pitch);\n}\n\nfunction noteNameAbcNotation(name: NoteName): string {\n  switch (name) {\n    case NoteName.A:\n      return \"A\";\n    case NoteName.ASharp:\n      return \"^A\";\n    case NoteName.BFlat:\n      return \"_B\";\n    case NoteName.B:\n      return \"B\";\n    case NoteName.C:\n      return \"C\";\n    case NoteName.CSharp:\n      return \"^C\";\n    case NoteName.DFlat:\n      return \"_D\";\n    case NoteName.D:\n      return \"D\";\n    case NoteName.DSharp:\n      return \"^D\";\n    case NoteName.EFlat:\n      return \"_E\";\n    case NoteName.E:\n      return \"E\";\n    case NoteName.F:\n      return \"F\";\n    case NoteName.FSharp:\n      return \"^F\";\n    case NoteName.GFlat:\n      return \"_G\";\n    case NoteName.G:\n      return \"G\";\n    case NoteName.GSharp:\n      return \"^G\";\n    case NoteName.AFlat:\n      return \"_A\";\n  }\n}\n\nfunction pitchAbcNotation(pitch: Pitch): string {\n  switch (getOctave(pitch)) {\n    case 2:\n      return \",\";\n    case 3:\n      return \"\";\n    case 4:\n      return \"'\";\n    case 5:\n      return \"''\";\n    case 6:\n      return \"'''\";\n  }\n}\n\nexport function getOctave(pitch: Pitch): 2 | 3 | 4 | 5 | 6 {\n  switch (pitch) {\n    case Pitch.E2:\n      return 2;\n    case Pitch.F2:\n      return 2;\n    case Pitch.FG2:\n      return 2;\n    case Pitch.G2:\n      return 2;\n    case Pitch.GA2:\n      return 2;\n    case Pitch.A2:\n      return 2;\n    case Pitch.AB2:\n      return 2;\n    case Pitch.B2:\n      return 2;\n    case Pitch.C3:\n      return 3;\n    case Pitch.CD3:\n      return 3;\n    case Pitch.D3:\n      return 3;\n    case Pitch.DE3:\n      return 3;\n    case Pitch.E3:\n      return 3;\n    case Pitch.F3:\n      return 3;\n    case Pitch.FG3:\n      return 3;\n    case Pitch.G3:\n      return 3;\n    case Pitch.GA3:\n      return 3;\n    case Pitch.A3:\n      return 3;\n    case Pitch.AB3:\n      return 3;\n    case Pitch.B3:\n      return 3;\n    case Pitch.C4:\n      return 4;\n    case Pitch.CD4:\n      return 4;\n    case Pitch.D4:\n      return 4;\n    case Pitch.DE4:\n      return 4;\n    case Pitch.E4:\n      return 4;\n    case Pitch.F4:\n      return 4;\n    case Pitch.FG4:\n      return 4;\n    case Pitch.G4:\n      return 4;\n    case Pitch.GA4:\n      return 4;\n    case Pitch.A4:\n      return 4;\n    case Pitch.AB4:\n      return 4;\n    case Pitch.B4:\n      return 4;\n    case Pitch.C5:\n      return 5;\n    case Pitch.CD5:\n      return 5;\n    case Pitch.D5:\n      return 5;\n    case Pitch.DE5:\n      return 5;\n    case Pitch.E5:\n      return 5;\n    case Pitch.F5:\n      return 5;\n    case Pitch.FG5:\n      return 5;\n    case Pitch.G5:\n      return 5;\n    case Pitch.GA5:\n      return 5;\n    case Pitch.A5:\n      return 5;\n    case Pitch.AB5:\n      return 5;\n    case Pitch.B5:\n      return 5;\n    case Pitch.C6:\n      return 6;\n    case Pitch.CD6:\n      return 6;\n    case Pitch.D6:\n      return 6;\n    case Pitch.DE6:\n      return 6;\n    case Pitch.E6:\n      return 6;\n  }\n}\n\nexport function getNotationWithoutLetters(notes: Note[]): string {\n  return `\nX: 1\nM: 4/4\nL: 1/4\n%%staves {V1}\nV: V1 clef=treble\n[V: V1] (d3 _B =B_A =A2 | _A2 _B=B G2) (cB | d8)        |]\n`;\n}\n","import { DEFAULT_SETTINGS, Note, Settings } from \"./businessLogic\";\nimport {\n  deserializeNoteHistory,\n  deserializeSettings,\n  serializeNoteHistory,\n  serializeSettings,\n} from \"./serde\";\n\nenum LocalStorageKey {\n  Settings = \"RandNote.Settings\",\n  NoteHistory = \"RandNote.NoteHistory\",\n}\n\nexport function loadSettings(): Settings {\n  const s = localStorage.getItem(LocalStorageKey.Settings);\n  if (s === null) {\n    return DEFAULT_SETTINGS;\n  }\n\n  const possiblyUndefinedSettings = deserializeSettings(s);\n  if (possiblyUndefinedSettings !== undefined) {\n    return possiblyUndefinedSettings;\n  } else {\n    return DEFAULT_SETTINGS;\n  }\n}\n\nexport function saveSettings(settings: Settings) {\n  localStorage.setItem(LocalStorageKey.Settings, serializeSettings(settings));\n}\n\nexport function loadNoteHistory(): Note[] {\n  const s = localStorage.getItem(LocalStorageKey.NoteHistory);\n  if (s === null) {\n    return [];\n  }\n\n  const possiblyUndefinedNoteHistory = deserializeNoteHistory(s);\n  if (possiblyUndefinedNoteHistory !== undefined) {\n    return possiblyUndefinedNoteHistory;\n  } else {\n    return [];\n  }\n}\n\nexport function saveNoteHistory(history: Note[]) {\n  localStorage.setItem(\n    LocalStorageKey.NoteHistory,\n    serializeNoteHistory(history)\n  );\n}\n","import {\n  NoteEquivalenceRelation,\n  NoteName,\n  Note,\n  Pitch,\n  Settings,\n  NoteDisplayStyle,\n} from \"./businessLogic\";\n\nexport function deserializeSettings(s: string): undefined | Settings {\n  try {\n    const parsed = JSON.parse(s);\n    if (isValidSettings(parsed)) {\n      return parsed;\n    }\n  } catch {}\n\n  return undefined;\n}\n\nfunction isValidSettings(x: unknown): x is Settings {\n  return (\n    \"object\" === typeof x &&\n    x !== null &&\n    \"boolean\" === typeof (x as Settings).naturalsOnly &&\n    \"boolean\" === typeof (x as Settings).allowRepeats &&\n    \"number\" === typeof (x as Settings).equivalenceRelation &&\n    (x as Settings).equivalenceRelation in NoteEquivalenceRelation &&\n    \"boolean\" === typeof (x as Settings).displayEquivalentNoteNames &&\n    \"number\" === typeof (x as Settings).sampleDisplayStyle &&\n    (x as Settings).sampleDisplayStyle in NoteDisplayStyle &&\n    \"number\" === typeof (x as Settings).minPitch &&\n    (x as Settings).minPitch in Pitch &&\n    \"number\" === typeof (x as Settings).maxPitch &&\n    (x as Settings).maxPitch in Pitch\n  );\n}\n\nexport function serializeSettings(settings: Settings): string {\n  return JSON.stringify(settings);\n}\n\nexport function deserializeNoteHistory(s: string): undefined | Note[] {\n  try {\n    const parsed = JSON.parse(s);\n    if (isValidSampleList(parsed)) {\n      return parsed;\n    }\n  } catch {}\n\n  return undefined;\n}\n\nfunction isValidSampleList(x: unknown): x is Note[] {\n  return Array.isArray(x) && x.every(isSample);\n}\n\nfunction isSample(x: unknown): x is Note {\n  return (\n    \"object\" === typeof x &&\n    x !== null &&\n    isNote((x as Note).name) &&\n    isPitch((x as Note).pitch)\n  );\n}\n\nfunction isNote(x: unknown): x is NoteName {\n  return \"string\" === typeof NoteName[x as NoteName];\n}\n\nfunction isPitch(x: unknown): x is Pitch {\n  return \"string\" === typeof Pitch[x as Pitch];\n}\n\nexport function serializeNoteHistory(notes: Note[]): string {\n  return JSON.stringify(notes);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  State,\n  NoteName,\n  getPossibleRandomNextNotes,\n  nameStrings,\n  getRandomNote,\n  Settings,\n  NoteEquivalenceRelation,\n  NoteDisplayStyle,\n  noteEqRelToNoteNameEqRel,\n  doesDisplayPitch,\n  isOctaveSensitive,\n  getNotationWithLetters,\n  getNotationWithoutLetters,\n  Pitch,\n  pitchToNoteNames,\n  nameString,\n  getOctave,\n} from \"./businessLogic\";\nimport {\n  loadSettings,\n  loadNoteHistory,\n  saveSettings,\n  saveNoteHistory,\n} from \"./persistentState\";\nimport { Notation } from \"react-abc\";\n\nexport default class App extends React.Component<{}, State> {\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      isSettingsOpen: false,\n      settings: loadSettings(),\n      history: loadNoteHistory(),\n    };\n\n    this.bindMethods();\n  }\n\n  bindMethods() {\n    this.onCloseSettingsClick = this.onCloseSettingsClick.bind(this);\n    this.onNaturalsOnlyChange = this.onNaturalsOnlyChange.bind(this);\n    this.onAllowRepeatsChange = this.onAllowRepeatsChange.bind(this);\n    this.onNoteDisplayStyleChange = this.onNoteDisplayStyleChange.bind(this);\n    this.onNoteEquivalenceRelationChange =\n      this.onNoteEquivalenceRelationChange.bind(this);\n    this.onDisplayEquivalentNoteNamesChange =\n      this.onDisplayEquivalentNoteNamesChange.bind(this);\n    this.onMinPitchChange = this.onMinPitchChange.bind(this);\n    this.onMaxPitchChange = this.onMaxPitchChange.bind(this);\n\n    this.onOpenSettingsClick = this.onOpenSettingsClick.bind(this);\n    this.onClearHistoryClick = this.onClearHistoryClick.bind(this);\n    this.onNoteScreenClick = this.onNoteScreenClick.bind(this);\n  }\n\n  render() {\n    if (this.state.isSettingsOpen) {\n      return this.renderSettingsPage();\n    } else {\n      return this.renderNotePage();\n    }\n  }\n\n  renderSettingsPage(): React.ReactElement {\n    const octaveSensitive = isOctaveSensitive(\n      this.state.settings.equivalenceRelation\n    );\n    const displaysPitch = doesDisplayPitch(\n      this.state.settings.sampleDisplayStyle\n    );\n    return (\n      <div className=\"App\">\n        <section>\n          <button onClick={this.onCloseSettingsClick}>Close</button>\n        </section>\n        <section className=\"Settings\">\n          <label className=\"Setting Setting--checkbox\">\n            <input\n              type=\"checkbox\"\n              checked={this.state.settings.naturalsOnly}\n              onChange={this.onNaturalsOnlyChange}\n            />\n            Naturals only\n          </label>\n          <label className=\"Setting Setting--checkbox\">\n            <input\n              type=\"checkbox\"\n              checked={this.state.settings.allowRepeats}\n              onChange={this.onAllowRepeatsChange}\n            />\n            Allow repeats\n          </label>\n          <label className=\"Setting Setting--checkbox\">\n            <input\n              type=\"checkbox\"\n              checked={this.state.settings.displayEquivalentNoteNames}\n              onChange={this.onDisplayEquivalentNoteNamesChange}\n            />\n            Display equivalent notes\n          </label>\n          <label className=\"Setting Setting--dropdown\">\n            Display style\n            <select\n              value={this.state.settings.sampleDisplayStyle}\n              onChange={this.onNoteDisplayStyleChange}\n            >\n              <option\n                value={NoteDisplayStyle.Letters}\n                disabled={octaveSensitive}\n              >\n                Letters\n              </option>\n              <option value={NoteDisplayStyle.Staff}>Staff</option>\n              <option value={NoteDisplayStyle.StaffAndLetters}>\n                Staff and letters\n              </option>\n            </select>\n            {octaveSensitive && (\n              <p>\n                (To enable the first option, set your equivalence relation to\n                any non-octave-sensitive relation)\n              </p>\n            )}\n          </label>\n          <label className=\"Setting Setting--dropdown\">\n            Note equivalence relation\n            <select\n              value={this.state.settings.equivalenceRelation}\n              onChange={this.onNoteEquivalenceRelationChange}\n            >\n              <option value={NoteEquivalenceRelation.ByNameModuloOctave}>\n                By name modulo octave (default)\n              </option>\n              <option value={NoteEquivalenceRelation.ByPitchModuloOctave}>\n                By pitch modulo octave\n              </option>\n              <option value={NoteEquivalenceRelation.ByLetter}>\n                By letter\n              </option>\n              <option\n                value={NoteEquivalenceRelation.ByPitch}\n                disabled={!displaysPitch}\n              >\n                By pitch (octave sensitive)\n              </option>\n              <option\n                value={NoteEquivalenceRelation.ByNameAndPitch}\n                disabled={!displaysPitch}\n              >\n                Reflexive (i.e., by pitch and name, octave sensitive)\n              </option>\n            </select>\n            {!displaysPitch && (\n              <p>\n                (To enable the last two options, set your Display Style to\n                \"Staff\" or \"Staff and Letters\")\n              </p>\n            )}\n          </label>\n          <label className=\"Setting Setting--slider\">\n            <span className=\"Setting__Label\">Lowest pitch:</span>\n            <input\n              type=\"range\"\n              min={Pitch.E2}\n              max={Pitch.E6}\n              value={this.state.settings.minPitch}\n              onChange={this.onMinPitchChange}\n            />\n            <span className=\"Setting__Label\">\n              {pitchToNoteNames(this.state.settings.minPitch)\n                .map(nameString)\n                .join(\"/\") + getOctave(this.state.settings.minPitch)}\n            </span>\n          </label>\n          <label className=\"Setting Setting--slider\">\n            <span className=\"Setting__Label\">Highest pitch: </span>\n            <input\n              type=\"range\"\n              min={Pitch.E2}\n              max={Pitch.E6}\n              value={this.state.settings.maxPitch}\n              onChange={this.onMaxPitchChange}\n            />\n            <span className=\"Setting__Label\">\n              {pitchToNoteNames(this.state.settings.maxPitch)\n                .map(nameString)\n                .join(\"/\") + getOctave(this.state.settings.maxPitch)}\n            </span>\n          </label>\n        </section>\n      </div>\n    );\n  }\n\n  onCloseSettingsClick(): void {\n    this.setState({ isSettingsOpen: false });\n  }\n\n  onNaturalsOnlyChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    this.updateSetting(\"naturalsOnly\", event.target.checked);\n  }\n\n  onAllowRepeatsChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    this.updateSetting(\"allowRepeats\", event.target.checked);\n  }\n\n  onNoteDisplayStyleChange(event: React.ChangeEvent<HTMLSelectElement>): void {\n    const n = parseInt(event.target.value, 10);\n    if (n in NoteDisplayStyle) {\n      this.updateSetting(\n        \"sampleDisplayStyle\",\n        n as unknown as NoteDisplayStyle\n      );\n    }\n  }\n\n  onNoteEquivalenceRelationChange(\n    event: React.ChangeEvent<HTMLSelectElement>\n  ): void {\n    const n = parseInt(event.target.value, 10);\n    if (n in NoteEquivalenceRelation) {\n      this.updateSetting(\n        \"equivalenceRelation\",\n        n as unknown as NoteEquivalenceRelation\n      );\n    }\n  }\n\n  onDisplayEquivalentNoteNamesChange(\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void {\n    this.updateSetting(\"displayEquivalentNoteNames\", event.target.checked);\n  }\n\n  onMinPitchChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    const n = parseInt(event.target.value, 10);\n    if (n in Pitch && n <= this.state.settings.maxPitch) {\n      this.updateSetting(\"minPitch\", n);\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  onMaxPitchChange(event: React.ChangeEvent<HTMLInputElement>): void {\n    const n = parseInt(event.target.value, 10);\n    if (n in Pitch && n >= this.state.settings.minPitch) {\n      this.updateSetting(\"maxPitch\", n);\n    } else {\n      event.preventDefault();\n    }\n  }\n\n  updateSetting<K extends keyof Settings>(setting: K, value: Settings[K]) {\n    this.setState((prevState) => {\n      const newSettings = { ...prevState.settings, [setting]: value };\n      saveSettings(newSettings);\n      return {\n        ...prevState,\n        settings: newSettings,\n      };\n    });\n  }\n\n  renderNotePage(): React.ReactElement {\n    const currentNote: NoteName | undefined =\n      this.state.history[this.state.history.length - 1]?.name;\n    const {\n      equivalenceRelation,\n      displayEquivalentNoteNames: displayEquivalentNotes,\n    } = this.state.settings;\n\n    return (\n      <div\n        className={\n          \"App\" +\n          (getPossibleRandomNextNotes(this.state.history, this.state.settings)\n            .length === 0\n            ? \" LastNote\"\n            : \"\")\n        }\n        onClick={this.onNoteScreenClick}\n      >\n        <section>\n          <button onClick={this.onOpenSettingsClick}>Settings</button>\n          <button onClick={this.onClearHistoryClick}>Reset</button>\n        </section>\n        {this.state.settings.sampleDisplayStyle === NoteDisplayStyle.Letters ? (\n          <>\n            <section>\n              <h2>Current note</h2>\n              {currentNote !== undefined ? (\n                <div className=\"CurrentNote\">\n                  {nameStrings(\n                    currentNote,\n                    noteEqRelToNoteNameEqRel(equivalenceRelation),\n                    displayEquivalentNotes\n                  )}\n                </div>\n              ) : (\n                <div>Tap to generate</div>\n              )}\n            </section>\n            <section>\n              {this.state.history.map((sample, i) => (\n                <div className=\"HistoryNote\" key={i}>\n                  {nameStrings(\n                    sample.name,\n                    noteEqRelToNoteNameEqRel(equivalenceRelation),\n                    displayEquivalentNotes\n                  )}\n                </div>\n              ))}\n            </section>\n          </>\n        ) : (\n          <section>\n            <Notation\n              notation={\n                this.state.settings.sampleDisplayStyle ===\n                NoteDisplayStyle.StaffAndLetters\n                  ? getNotationWithLetters(this.state.history)\n                  : getNotationWithoutLetters(this.state.history)\n              }\n            />\n          </section>\n        )}\n      </div>\n    );\n  }\n\n  onOpenSettingsClick() {\n    this.setState({ isSettingsOpen: true });\n  }\n\n  onClearHistoryClick() {\n    this.setState({ history: [] });\n    saveNoteHistory([]);\n  }\n\n  onNoteScreenClick(event: React.MouseEvent) {\n    if (event.target instanceof HTMLButtonElement) {\n      return;\n    }\n\n    this.setState((prevState) => {\n      const sample = getRandomNote(prevState.history, prevState.settings);\n      const newHistory =\n        sample === undefined\n          ? prevState.history\n          : prevState.history.concat([sample]);\n      saveNoteHistory(newHistory);\n      return { ...prevState, history: newHistory };\n    });\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}